[["index.html", "Arrow Cookbook 1 Preface", " Arrow Cookbook 1 Preface This cookbook aims to provide a number of recipes showing how to perform common tasks using arrow. "],["configure-arrow.html", "2 Configure Arrow 2.1 Get config information and check which components are available 2.2 Control how many CPUs are being used 2.3 Control IO Tthread count 2.4 Switch from the CRAN version to the development version of arrow 2.5 Switch from the development version to CRAN version of arrow 2.6 Install compression libraries 2.7 Install the Arrow R package using the system Arrow installation", " 2 Configure Arrow 2.1 Get config information and check which components are available arrow_info() ## Arrow package version: 4.0.1.20210629 ## ## Capabilities: ## ## dataset TRUE ## parquet TRUE ## s3 TRUE ## utf8proc TRUE ## re2 TRUE ## snappy TRUE ## gzip TRUE ## brotli TRUE ## zstd TRUE ## lz4 TRUE ## lz4_frame TRUE ## lzo FALSE ## bz2 TRUE ## jemalloc TRUE ## mimalloc TRUE ## ## Memory: ## ## Allocator jemalloc ## Current 0 bytes ## Max 0 bytes ## ## Runtime: ## ## SIMD Level avx512 ## Detected SIMD Level avx512 ## ## Build: ## ## C++ Library Version 5.0.0-SNAPSHOT ## C++ Compiler GNU ## C++ Compiler Version 7.5.0 2.2 Control how many CPUs are being used cpu_count() ## [1] 2 set_cpu_count(4) 2.3 Control IO Tthread count io_thread_count() ## [1] 2 set_io_thread_count(2) 2.4 Switch from the CRAN version to the development version of arrow install_arrow(nightly = TRUE) 2.5 Switch from the development version to CRAN version of arrow install_arrow() 2.6 Install compression libraries codec_is_available(&quot;lzo&quot;) ## [1] FALSE 2.7 Install the Arrow R package using the system Arrow installation install_arrow(use_system = TRUE) "],["work-with-data-in-different-formats.html", "3 Work with data in different formats 3.1 Read and write Feather files 3.2 Read and writing streaming IPC files 3.3 Read and write Parquet files 3.4 Read and write CSV (and other delimited files) and JSON files 3.5 Read and write multi-file, larger-than-memory datasets 3.6 Read and write files in Amazon S3 buckets 3.7 Send and receive data over a network using an Arrow Flight RPC server", " 3 Work with data in different formats This chapter contains recipes related to reading and writing data from disk using Apache Arrow. 3.1 Read and write Feather files The Arrow IPC file format is identical to the Feather version 2 format. If you call write_arrow(), you will get a warning telling you to use write_feather() instead. write_arrow(iris, &quot;iris.arrow&quot;) ## Warning: Use &#39;write_ipc_stream&#39; or &#39;write_feather&#39; instead. You can write Feather files to disk using write_feather(). If you are using the default parameters, this is identical to calling write_arrow(). write_feather(mtcars, &quot;mtcars.feather&quot;) 3.1.1 Write a Feather (version 1) file You can write data in the original Feather format by setting the version parameter to 1. write_feather(mtcars, &quot;mtcars_f1.feather&quot;, version = 1) 3.2 Read and writing streaming IPC files write_ipc_stream(iris, &quot;iris.arrows&quot;) 3.3 Read and write Parquet files 3.3.1 Writing a Parquet file You can write Parquet files to disk using arrow::write_parquet(). write_parquet(mtcars, &quot;mtcars.parquet&quot;) 3.3.2 Reading a Parquet file Given a Parquet file, it can be read back to an Arrow Table by using arrow::read_parquet(). mtcars_table &lt;- read_parquet(&quot;mtcars.parquet&quot;) head(mtcars_table) ## mpg cyl disp hp drat wt qsec vs am gear carb ## 1 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## 2 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## 3 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## 4 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## 5 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 ## 6 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 If the argument as_data_frame was set to TRUE (the default), the file was read in as a data.frame object. class(mtcars_table) ## [1] &quot;data.frame&quot; If you set as_data_frame to FALSE, the file will be read in as an Arrow Table. mtcars_arrow_table &lt;- read_parquet(&quot;mtcars.parquet&quot;, as_data_frame = FALSE) head(mtcars_arrow_table) ## Table ## 6 rows x 11 columns ## $mpg &lt;double&gt; ## $cyl &lt;double&gt; ## $disp &lt;double&gt; ## $hp &lt;double&gt; ## $drat &lt;double&gt; ## $wt &lt;double&gt; ## $qsec &lt;double&gt; ## $vs &lt;double&gt; ## $am &lt;double&gt; ## $gear &lt;double&gt; ## $carb &lt;double&gt; ## ## See $metadata for additional Schema metadata class(mtcars_arrow_table) ## [1] &quot;Table&quot; &quot;ArrowTabular&quot; &quot;ArrowObject&quot; &quot;R6&quot; 3.4 Read and write CSV (and other delimited files) and JSON files 3.5 Read and write multi-file, larger-than-memory datasets 3.6 Read and write files in Amazon S3 buckets 3.7 Send and receive data over a network using an Arrow Flight RPC server "],["work-with-compressed-or-partitioned-data.html", "4 Work with Compressed or Partitioned Data 4.1 Read and write compressed data 4.2 Read and write partitioned data 4.3 Create an Arrow table from an R object 4.4 Arrays 4.5 ChunkedArrays 4.6 Scalars 4.7 RecordBatches", " 4 Work with Compressed or Partitioned Data 4.1 Read and write compressed data 4.2 Read and write partitioned data 4.3 Create an Arrow table from an R object 4.4 Arrays 4.5 ChunkedArrays 4.6 Scalars 4.7 RecordBatches "],["specify-data-types-and-schemas.html", "5 Specify data types and schemas 5.1 Data types 5.2 Create a schema 5.3 Read a schema 5.4 Combine and harmonize schemas", " 5 Specify data types and schemas (intro - why this is important, i.e. Exercise fine control over column types for seamless interoperability with databases and data warehouse systems) 5.1 Data types 5.2 Create a schema 5.3 Read a schema 5.4 Combine and harmonize schemas "],["manipulate-data.html", "6 Manipulate Data 6.1 Manipulate and analyze Arrow data with dplyr verbs 6.2 Using simple mathematical and statistical function 6.3 Work with character data (stringr functions and Arrow functions) 6.4 Work with datetime data (lubridate functions) 6.5 Call an Arrow compute function which doesn’t yet have an R binding 6.6 Access and manipulate Arrow objects through low-level bindings to the C++ library", " 6 Manipulate Data 6.1 Manipulate and analyze Arrow data with dplyr verbs 6.2 Using simple mathematical and statistical function 6.3 Work with character data (stringr functions and Arrow functions) 6.4 Work with datetime data (lubridate functions) 6.4.1 Extracting date components If you want to extract individual components from a date, you can use the following functions that mimic the behaviour of the equivalent lubridate functions: year isoyear quarter month day wday yday isoweek hour minute second 6.5 Call an Arrow compute function which doesn’t yet have an R binding 6.6 Access and manipulate Arrow objects through low-level bindings to the C++ library "],["work-with-arrow-in-both-python-and-r.html", "7 Work with Arrow in both Python and R 7.1 Install pyarrow (released version) 7.2 Install pyarrow (development version) 7.3 Share data between R and Python (reticulate)", " 7 Work with Arrow in both Python and R 7.1 Install pyarrow (released version) 7.2 Install pyarrow (development version) 7.3 Share data between R and Python (reticulate) "]]
